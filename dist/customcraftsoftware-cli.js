#!/usr/bin/env node
var{execSync:a}=require("child_process"),e=require("path"),d={build_size:e.resolve(__dirname,"../scripts/build_size.sh"),clean_and_rebuild:e.resolve(__dirname,"../scripts/clean_and_rebuild.sh"),create_component:e.resolve(__dirname,"../scripts/create_component.sh"),setup:e.resolve(__dirname,"../scripts/setup.sh"),unused_imports_list:e.resolve(__dirname,"../scripts/unused_imports_list.sh"),unused_imports_uninstall:e.resolve(__dirname,"../scripts/unused_imports_uninstall.sh"),update_dependencies:e.resolve(__dirname,"../scripts/update_dependencies.sh")},s=(i,o)=>{let n=d[i];n||(console.error(`Unknown script: ${i}`),process.exit(1)),console.log(`Running ${n}...`);try{a(`bash "${n}" ${o.join(" ")}`,{stdio:"inherit"})}catch(c){console.error(`Failed to run ${n}: ${c.message}`)}},r=process.argv.slice(2);r.length===0&&(console.log("Please provide a command to run."),console.log("Available commands: create-component, build-size, clean-and-rebuild, setup, unused-imports-list, unused-imports-uninstall, update-dependencies"),process.exit(0));var t=r[0];switch(t){case"create-component":s("create_component",r.slice(1));break;case"build-size":s("build_size",[]);break;case"clean-and-rebuild":s("clean_and_rebuild",[]);break;case"setup":s("setup",[]);break;case"unused-imports-list":s("unused_imports_list",[]);break;case"unused-imports-uninstall":s("unused_imports_uninstall",[]);break;case"update-dependencies":s("update_dependencies",[]);break;default:console.error(`Unknown command: ${t}`),process.exit(1)}
